// Generated by Willowsoft.WillowLib.CodeGen.ClassCreator at 2/28/2009 10:15:00 PM
using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Data.SqlClient;
using Willowsoft.WillowLib.Data.Entity;
using Willowsoft.WillowLib.Data.Sql;
using Willowsoft.Ordering.Core.Entities;

namespace Willowsoft.Ordering.Core.Entities
{
    [DebuggerStepThrough]
    public class PurOrderId : EntityId
    {
        public PurOrderId() { }
        public PurOrderId(int value) : base(value) { }
    }

    public partial class PurOrder : Entity<PurOrderId>
    {
        #region Private property fields

        private VendorId mVendorId;
        private string mOrderNumber;
        private DateTime mOrderDate;
        private DateTime? mShipDate;
        private DateTime? mSubmitDate;
        private string mCreatedBy;
        private int mDiscount;
        private string mInvoiceNumber;
        private decimal mFreight;
        private string mTerms;
        private string mNotes;

        #endregion

        #region Constructors

        [DebuggerStepThrough]
        public PurOrder(PurOrderId Id_,
            VendorId VendorId_,
            string OrderNumber_,
            DateTime OrderDate_,
            DateTime? ShipDate_,
            DateTime? SubmitDate_,
            string CreatedBy_,
            int Discount_,
            string InvoiceNumber_,
            decimal Freight_,
            string Terms_,
            string Notes_,
            DateTime CreateDate_,
            DateTime ModifyDate_)
            : base(Id_, CreateDate_, ModifyDate_)
        {
            mVendorId = VendorId_;
            mOrderNumber = OrderNumber_;
            mOrderDate = OrderDate_;
            mShipDate = ShipDate_;
            mSubmitDate = SubmitDate_;
            mCreatedBy = CreatedBy_;
            mDiscount = Discount_;
            mInvoiceNumber = InvoiceNumber_;
            mFreight = Freight_;
            mTerms = Terms_;
            mNotes = Notes_;
        }

        [DebuggerStepThrough]
        public PurOrder()
            : this(new PurOrderId(),
            new VendorId(),
            string.Empty,
            DateTime.Today,
            new DateTime(1980, 1, 1),
            new DateTime(1980, 1, 1),
            string.Empty,
            0,
            string.Empty,
            0m,
            string.Empty,
            string.Empty,
            DateTime.Now, DateTime.Now)
        {
        }

        #endregion

        #region Encapsulated fields

        public VendorId VendorId
        {
            [DebuggerStepThrough]
            get { return mVendorId; }
            [DebuggerStepThrough]
            set { PropertySet(ref mVendorId, value); }
        }

        public string OrderNumber
        {
            [DebuggerStepThrough]
            get { return mOrderNumber; }
            [DebuggerStepThrough]
            set { PropertySet(ref mOrderNumber, value); }
        }

        public DateTime OrderDate
        {
            [DebuggerStepThrough]
            get { return mOrderDate; }
            [DebuggerStepThrough]
            set { PropertySet(ref mOrderDate, value); }
        }

        public DateTime? ShipDate
        {
            [DebuggerStepThrough]
            get { return mShipDate; }
            [DebuggerStepThrough]
            set { PropertySet(ref mShipDate, value); }
        }

        public DateTime? SubmitDate
        {
            [DebuggerStepThrough]
            get { return mSubmitDate; }
            [DebuggerStepThrough]
            set { PropertySet(ref mSubmitDate, value); }
        }

        public string CreatedBy
        {
            [DebuggerStepThrough]
            get { return mCreatedBy; }
            [DebuggerStepThrough]
            set { PropertySet(ref mCreatedBy, value); }
        }

        public int Discount
        {
            [DebuggerStepThrough]
            get { return mDiscount; }
            [DebuggerStepThrough]
            set { PropertySet(ref mDiscount, value); }
        }

        public string InvoiceNumber
        {
            [DebuggerStepThrough]
            get { return mInvoiceNumber; }
            [DebuggerStepThrough]
            set { PropertySet(ref mInvoiceNumber, value); }
        }

        public decimal Freight
        {
            [DebuggerStepThrough]
            get { return mFreight; }
            [DebuggerStepThrough]
            set { PropertySet(ref mFreight, value); }
        }

        public string Terms
        {
            [DebuggerStepThrough]
            get { return mTerms; }
            [DebuggerStepThrough]
            set { PropertySet(ref mTerms, value); }
        }

        public string Notes
        {
            [DebuggerStepThrough]
            get { return mNotes; }
            [DebuggerStepThrough]
            set { PropertySet(ref mNotes, value); }
        }

        #endregion
    }
}

namespace Willowsoft.Ordering.Core.Repositories
{
    public partial class SqlPurOrderRepository
        : SqlEntityRepository<PurOrder, PurOrderId, OrderingDataSet.PurOrderRow>,
        IPurOrderRepository
    {
        #region SqlEntityRepository Members

        [DebuggerStepThrough]
        protected override PurOrder CreateEntity(OrderingDataSet.PurOrderRow dataRow)
        {
            PurOrder entity = new PurOrder(new PurOrderId(dataRow.PurOrderId),
                new VendorId(dataRow.VendorId),
                dataRow.OrderNumber,
                dataRow.OrderDate,
                (DateTime?)dataRow.ShipDate,
                (DateTime?)dataRow.SubmitDate,
                dataRow.CreatedBy,
                dataRow.Discount,
                dataRow.InvoiceNumber,
                (decimal)dataRow.Freight,
                dataRow.Terms,
                dataRow.Notes,
                dataRow.CreateDate, dataRow.ModifyDate);
            return entity;
        }

        [DebuggerStepThrough]
        public override List<PurOrder> CreateEntities(SqlDataAdapter adapter)
        {
            OrderingDataSet dataSet = new OrderingDataSet();
            adapter.Fill(dataSet.PurOrder);
            return CreateEntities(dataSet.PurOrder);
        }

        [DebuggerStepThrough]
        protected override void AddInsertUpdateParams(SqlCommand cmd, PurOrder entity)
        {
            SqlHelper.AddParamInputId(cmd, "@VendorId", entity.VendorId.Value);
            SqlHelper.AddParamVarchar(cmd, "@OrderNumber", entity.OrderNumber ?? string.Empty);
            SqlHelper.AddParamDatetime(cmd, "@OrderDate", entity.OrderDate);
            SqlHelper.AddParamDatetime(cmd, "@ShipDate", entity.ShipDate);
            SqlHelper.AddParamDatetime(cmd, "@SubmitDate", entity.SubmitDate);
            SqlHelper.AddParamVarchar(cmd, "@CreatedBy", entity.CreatedBy ?? string.Empty);
            SqlHelper.AddParamInt(cmd, "@Discount", entity.Discount);
            SqlHelper.AddParamVarchar(cmd, "@InvoiceNumber", entity.InvoiceNumber ?? string.Empty);
            SqlHelper.AddParamMoney(cmd, "@Freight", entity.Freight);
            SqlHelper.AddParamVarchar(cmd, "@Terms", entity.Terms ?? string.Empty);
            SqlHelper.AddParamVarchar(cmd, "@Notes", entity.Notes ?? string.Empty);
        }

        protected override string EntityName
        {
            [DebuggerStepThrough]
            get { return "PurOrder"; }
        }

        #endregion
    }
}
